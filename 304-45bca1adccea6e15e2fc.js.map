{"version":3,"sources":["webpack:///./packages/terra-list/lib/terra-dev-site/doc/guides/mock-data/mock-select.js","webpack:///./packages/terra-list/docs/guides/MultiSelectList.md","webpack:///./packages/terra-list/lib/terra-dev-site/doc/guides/MultiSelectList.js","webpack:///./packages/terra-list/src/terra-dev-site/doc/guides/MultiSelectList.jsx","webpack:///./packages/terra-list/lib/terra-dev-site/doc/list/guides.7/MultiSelectList.2.doc.js"],"names":["Object","defineProperty","exports","value","default","_default","title","key","_react","_interopRequireDefault","require","_index","obj","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_Placeholder","_bind","_mockSelect","_ListDocCommonModule","WeakMap","_typeof","Symbol","iterator","constructor","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","cx","bind","_React$Component","MutliSelectList","_this","instance","Constructor","TypeError","_classCallCheck","this","createListItem","handleItemSelection","state","selectedKeys","protoProps","staticProps","subClass","superClass","create","_inherits","event","metaData","preventDefault","setState","Utils","updatedMultiSelectedKeys","itemData","createElement","Item","isSelectable","shouldBeMultiSelectable","isSelected","indexOf","onSelect","className","data","_this2","map","childItem","dividerStyle","role","createListItems","Component","_terraDocTemplate","_MultiSelectList","_package","_MultiSelectList2","_MultiSelectList3","packageName","name","packageVersion","version","readme","srcPath","concat","examples","example","source"],"mappings":"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","file":"304-45bca1adccea6e15e2fc.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar mockData = [{\n  title: 'Item 0',\n  key: 'unique-0'\n}, {\n  title: 'Item 1',\n  key: 'unique-1'\n}, {\n  title: 'Item 2',\n  key: 'unique-2'\n}, {\n  title: 'Item 3',\n  key: 'unique-3'\n}, {\n  title: 'Item 4',\n  key: 'unique-4'\n}];\nvar _default = mockData;\nexports.default = _default;","export default \"# Terra List - Implementing a Multi Select List\\n\\nThe terra-list implementation requires controlled state if selections are required. As a result, selections are applied when child items are generated from HOC state. The following guide will show you how to implement that state within a multiple items selection variant of list, as well as implement the additional narrowing requirements of a max selection for items.\\n\\n## State Management\\nThe state of selection needs to be managed for the list in a High Order Component (HOC). In this example we are going to be a unique key, but the type of state used is open to the implementor of the HOC.\\n\\nFirst defaulting our state to an empty array in the constructor. \\n```diff\\nclass MyList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n+   this.state = { selectedKeys: [] };\\n  }\\n  \\n  render() {\\n    return (\\n    );\\n  }\\n}\\n```\\nNext creating an event handler callback method to pass to the list item's `onSelect` prop. The `onSelect` will return the metaData prop passed it each listItem.\\n```diff\\nclass MyList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = { collapsedKeys: [] };\\n+   this.handleItemSelection = this.handleItemSelection.bind(this)\\n  }\\n  \\n+  handleItemSelection(event, metaData) {\\n+\\n+  }\\n```\\nAs a precaution we can prevent default on the event, in case the list has an ancestor with a listener. This also prevents the browser from auto page scrolling when we are intending to make a selection with the space bar.\\n```diff\\n  handleItemSelection(event, metaData) {\\n+   event.preventDefault();\\n  }\\n```\\nTerra list comes with additional helpers to manage state. In this case, we want to determine if the selection has selected or unselected the list item key in our state. So we use the utility method `updatedMulitSelectedKeys`, which returns an array of the keys following the addition or removing of the key passed. We then set this as our state.\\n```diff\\n  handleItemSelection(event, metaData) {\\n    event.preventDefault();\\n+   this.setState(state => ({ selectedKeys: Utils.updatedMultiSelectedKeys(state.selectedKeys, metaData.key) }));\\n  }\\n```\\nSetting state will trigger another render. So in the render method we need generate our list items with the updated `isSelected` and `isSelectable` props. Each item needs a unique key, not necessarily associated to our own key, but it works as well. The list renders flat, so keys need to be unique even if they are placed within sections.\\n[React List & Key Documentation](https://reactjs.org/docs/lists-and-keys.html)\\n```diff\\nclass MyList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = { collapsedKeys: [] };\\n    this.handleSectionSelection = this.handleSectionSelection.bind(this)\\n+   this.createListItem = this.createListItem.bind(this)\\n  }\\n  ...\\n+  createListItem(itemData) {\\n+   return (\\n+     <Item\\n+       key={itemData.key}\\n+     >\\n+       <Placeholder />\\n+     </Item>\\n+   );\\n+ }\\n```\\nNext we need to set up our `metaData` object with our key value, and attach the `onSelect` to our handler.\\n```diff\\n  createListItem(itemData) {\\n    return (\\n      <Item\\n        key={itemData.key}\\n+       metaData={{ key: itemData.key }}\\n+       onSelect={this.handleItemSelection}\\n      >\\n        <Placeholder />\\n      </Item>\\n    );\\n  }\\n```\\nFor multi-select lists we need to set selectability based upon whether or not we have reached our max selection count.  Terra List provides a helper for this, namely `shouldBeMultiSelectable`, by providing our count, the currently selected key, and the key of the associated item.\\n```diff\\n  createListItem(itemData) {\\n    return (\\n      <Item\\n        key={itemData.key}\\n+       isSelectable={Utils.shouldBeMultiSelectable(maxSectionCount, this.state.selectedKeys, itemData.key)}\\n        metaData={{ key: itemData.key }}\\n        onSelect={this.handleItemSelection}\\n      >\\n        <Placeholder />\\n      </Item>\\n    );\\n  }\\n```\\nFinally we need to check if the item is selected. As we support IE10 & 11, we cannot use `contains`, so we use `indexOf` to determine if the key is present in our state array.\\n```diff\\n  createListItem(itemData) {\\n    return (\\n      <Item\\n        key={itemData.key}\\n        isSelectable={Utils.shouldBeMultiSelectable(maxSectionCount, this.state.selectedKeys, itemData.key)}\\n+       isSelected={this.state.selectedKeys.indexOf(itemData.key) >= 0}\\n        metaData={{ key: itemData.key }}\\n        onSelect={this.handleItemSelection}\\n      >\\n        <Placeholder />\\n      </Item>\\n    );\\n  }\\n```\\nThen we can implement a method to loop through our data and create the list item with our methods and call it from our render method. Making special note to assign the aria role of `\\\"listbox\\\"` and a string to `aria-label` for the list, as it is required for accessibility with selectable list options. In addition, we need to assign the aria role for multiple selections, `aria-multiselectable`.\\n```diff\\nclass MyList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = { collapsedKeys: [] };\\n    this.handleItemSelection = this.handleItemSelection.bind(this)\\n    this.createListItem = this.createListItem.bind(this)\\n+   this.createListItems = this.createListItems.bind(this)\\n  }\\n  ...\\n+ createListItems(data) {\\n+   return data.map(childItem => this.createListItem(childItem));\\n+ }\\n\\n  render() {\\n    return (\\n+     <List\\n+       dividerStyle=\\\"standard\\\"\\n+       role=\\\"listbox\\\"\\n+       aria-multiselectable\\n+       aria-label=\\\"MultiSelectList-label\\\"\\n+     >\\n+       {this.createListItems(mockData)}\\n+     </List>\\n+   );\\n+ }\\n```\\n  Using these steps we get the following example.\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _index = _interopRequireWildcard(require(\"terra-list/lib/index\"));\n\nvar _Placeholder = _interopRequireDefault(require(\"terra-doc-template/lib/Placeholder\"));\n\nvar _bind = _interopRequireDefault(require(\"classnames/bind\"));\n\nvar _mockSelect = _interopRequireDefault(require(\"./mock-data/mock-select\"));\n\nvar _ListDocCommonModule = _interopRequireDefault(require(\"../example/ListDocCommon.module.scss\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar cx = _bind.default.bind(_ListDocCommonModule.default);\n\nvar maxSectionCount = 3;\n\nvar MutliSelectList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MutliSelectList, _React$Component);\n\n  function MutliSelectList(props) {\n    var _this;\n\n    _classCallCheck(this, MutliSelectList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MutliSelectList).call(this, props));\n    _this.createListItem = _this.createListItem.bind(_assertThisInitialized(_this));\n    _this.handleItemSelection = _this.handleItemSelection.bind(_assertThisInitialized(_this));\n    _this.state = {\n      selectedKeys: []\n    };\n    return _this;\n  }\n\n  _createClass(MutliSelectList, [{\n    key: \"handleItemSelection\",\n    value: function handleItemSelection(event, metaData) {\n      event.preventDefault();\n      this.setState(function (state) {\n        return {\n          selectedKeys: _index.Utils.updatedMultiSelectedKeys(state.selectedKeys, metaData.key)\n        };\n      });\n    }\n  }, {\n    key: \"createListItem\",\n    value: function createListItem(itemData) {\n      return _react.default.createElement(_index.Item, {\n        key: itemData.key,\n        isSelectable: _index.Utils.shouldBeMultiSelectable(maxSectionCount, this.state.selectedKeys, itemData.key),\n        isSelected: this.state.selectedKeys.indexOf(itemData.key) >= 0,\n        metaData: {\n          key: itemData.key\n        },\n        onSelect: this.handleItemSelection\n      }, _react.default.createElement(_Placeholder.default, {\n        title: itemData.title,\n        className: cx('placeholder')\n      }));\n    }\n  }, {\n    key: \"createListItems\",\n    value: function createListItems(data) {\n      var _this2 = this;\n\n      return data.map(function (childItem) {\n        return _this2.createListItem(childItem);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_index.default, {\n        dividerStyle: \"standard\",\n        role: \"listbox\",\n        \"aria-multiselectable\": true,\n        \"aria-label\": \"MultiSelectList-label\"\n      }, this.createListItems(_mockSelect.default));\n    }\n  }]);\n\n  return MutliSelectList;\n}(_react.default.Component);\n\nvar _default = MutliSelectList;\nexports.default = _default;","export default \"import React from 'react';\\nimport List, { Item, Utils } from 'terra-list/lib/index';\\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\\nimport classNames from 'classnames/bind';\\nimport mockData from './mock-data/mock-select';\\nimport styles from '../example/ListDocCommon.module.scss';\\n\\nconst cx = classNames.bind(styles);\\n\\nconst maxSectionCount = 3;\\n\\nclass MutliSelectList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.createListItem = this.createListItem.bind(this);\\n    this.handleItemSelection = this.handleItemSelection.bind(this);\\n    this.state = { selectedKeys: [] };\\n  }\\n\\n  handleItemSelection(event, metaData) {\\n    event.preventDefault();\\n    this.setState(state => ({ selectedKeys: Utils.updatedMultiSelectedKeys(state.selectedKeys, metaData.key) }));\\n  }\\n\\n  createListItem(itemData) {\\n    return (\\n      <Item\\n        key={itemData.key}\\n        isSelectable={Utils.shouldBeMultiSelectable(maxSectionCount, this.state.selectedKeys, itemData.key)}\\n        isSelected={this.state.selectedKeys.indexOf(itemData.key) >= 0}\\n        metaData={{ key: itemData.key }}\\n        onSelect={this.handleItemSelection}\\n      >\\n        <Placeholder title={itemData.title} className={cx('placeholder')} />\\n      </Item>\\n    );\\n  }\\n\\n  createListItems(data) {\\n    return data.map(childItem => this.createListItem(childItem));\\n  }\\n\\n  render() {\\n    return (\\n      <List\\n        dividerStyle=\\\"standard\\\"\\n        role=\\\"listbox\\\"\\n        aria-multiselectable\\n        aria-label=\\\"MultiSelectList-label\\\"\\n      >\\n        {this.createListItems(mockData)}\\n      </List>\\n    );\\n  }\\n}\\n\\nexport default MutliSelectList;\\n\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _terraDocTemplate = _interopRequireDefault(require(\"terra-doc-template\"));\n\nvar _MultiSelectList = _interopRequireDefault(require(\"../../../../../docs/guides/MultiSelectList.md\"));\n\nvar _package = require(\"../../../../../package.json\");\n\nvar _MultiSelectList2 = _interopRequireDefault(require(\"../../guides/MultiSelectList\"));\n\nvar _MultiSelectList3 = _interopRequireDefault(require(\"!raw-loader!../../../../../src/terra-dev-site/doc/guides/MultiSelectList\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-webpack-loader-syntax, import/first, import/no-duplicates */\n// Example Files\nvar DocPage = function DocPage() {\n  return _react.default.createElement(_terraDocTemplate.default, {\n    packageName: _package.name,\n    packageVersion: _package.version,\n    readme: _MultiSelectList.default,\n    srcPath: \"https://github.com/cerner/terra-core/tree/master/packages/\".concat(_package.name),\n    examples: [{\n      example: _react.default.createElement(_MultiSelectList2.default, null),\n      source: _MultiSelectList3.default\n    }]\n  });\n};\n\nvar _default = DocPage;\nexports.default = _default;"],"sourceRoot":""}