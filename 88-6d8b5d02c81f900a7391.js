(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{2127:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">allowClear</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether a clear option is available to clear the selection, will use placeholder text if provided.\nThis is not applicable to the <code style="white-space: pre-wrap">multiple</code> or <code>tag</code> variants since the selection can already be deselected using the tag.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">children</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The dropdown menu options.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">defaultValue</td><td style="padding-bottom: 1.8rem">union</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The default selected value. Can be a string, number, or array of strings/numbers.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">disabled</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the select is disabled.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">dropdownAttrs</td><td style="padding-bottom: 1.8rem">object</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Additional attributes to spread onto the dropdown. ( Style, ClassNames, etc.. )</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isInvalid</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the select is in an invalid state.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isTouchAccessible</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Ensure accessibility on touch devices. Will render the dropdown menu in\nnormal DOM flow with position absolute. By default, the menu renders in a\nportal, which is inaccessible on touch devices. Only applicable to variants\nthat include an input (e.g. <code style="white-space: pre-wrap">combobox</code>, <code>multiple</code>, <code>search</code>, and <code>tag</code>).</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">maxHeight</td><td style="padding-bottom: 1.8rem">number</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The max height of the dropdown.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">noResultContent</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Content to display when no results are found.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onBlur</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">Callback function triggered when the select loses focus. function(event)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onChange</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when the value changes. function(value)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onClick</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">Callback function triggered when the select is clicked. function(event)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onDeselect</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when an option is deselected. function(value)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onFocus</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">Callback function triggered when the select receives focus. function(event)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onSearch</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when the search criteria changes. function(searchValue)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onSelect</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when an option is selected. function(value)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">optionFilter</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function invoked for each option on search change. function(searchValue, option)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">placeholder</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Placeholder text.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">required</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the field is required.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">value</td><td style="padding-bottom: 1.8rem">union</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The selected value. Can be a string, number, or array of strings/numbers.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">variant</td><td style="padding-bottom: 1.8rem">enum</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">\'default\'</td><td style="padding-bottom: 1.8rem">The behavior of the select. One of <code style="white-space: pre-wrap">default</code>, <code>combobox</code>, <code>multiple</code>, <code>tag</code>, or <code>search</code>.</td></tr></tbody></table>'},2128:function(e,t,l){"use strict";l.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport Variants from './shared/_variants';\nimport Option from './shared/_Option';\nimport OptGroup from './shared/_OptGroup';\nimport Combobox from './Combobox';\nimport SingleSelect from './SingleSelect';\nimport MultiSelect from './MultiSelect';\nimport Search from './SearchSelect';\nimport Tag from './TagSelect';\n\nconst propTypes = {\n  /**\n   * Whether a clear option is available to clear the selection, will use placeholder text if provided.\n   * This is not applicable to the `multiple` or `tag` variants since the selection can already be deselected using the tag.\n   */\n  allowClear: PropTypes.bool,\n  /**\n   * The dropdown menu options.\n   */\n  children: PropTypes.node,\n  /**\n   * The default selected value. Can be a string, number, or array of strings/numbers.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  /**\n   * Whether the select is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Additional attributes to spread onto the dropdown. ( Style, ClassNames, etc.. )\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  dropdownAttrs: PropTypes.object,\n  /**\n   * Whether the select is in an invalid state.\n   */\n  isInvalid: PropTypes.bool,\n  /**\n   * Ensure accessibility on touch devices. Will render the dropdown menu in\n   * normal DOM flow with position absolute. By default, the menu renders in a\n   * portal, which is inaccessible on touch devices. Only applicable to variants\n   * that include an input (e.g. `combobox`, `multiple`, `search`, and `tag`).\n   */\n  isTouchAccessible: PropTypes.bool,\n  /**\n   * The max height of the dropdown.\n   */\n  maxHeight: PropTypes.number,\n  /**\n   * @private The maximum number of options that can be selected. A value less than 2 will be ignored.\n   * Only applicable to variants allowing multiple selections (e.g.; `multiple`; `tag`).\n   */\n  maxSelectionCount: PropTypes.number,\n  /**\n   * Content to display when no results are found.\n   */\n  noResultContent: PropTypes.node,\n  /**\n   * Callback function triggered when the select loses focus. function(event)\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback function triggered when the value changes. function(value)\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback function triggered when the select is clicked. function(event)\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback function triggered when an option is deselected. function(value)\n   */\n  onDeselect: PropTypes.func,\n  /**\n   * Callback function triggered when the select receives focus. function(event)\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback function triggered when the search criteria changes. function(searchValue)\n   */\n  onSearch: PropTypes.func,\n  /**\n   * Callback function triggered when an option is selected. function(value)\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Callback function invoked for each option on search change. function(searchValue, option)\n   */\n  optionFilter: PropTypes.func,\n  /**\n   * Placeholder text.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Whether the field is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The selected value. Can be a string, number, or array of strings/numbers.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  /**\n   * The behavior of the select. One of `default`, `combobox`, `multiple`, `tag`, or `search`.\n   */\n  variant: PropTypes.oneOf([\n    Variants.COMBOBOX,\n    Variants.DEFAULT,\n    Variants.MULTIPLE,\n    Variants.SEARCH,\n    Variants.TAG,\n  ]),\n};\n\nconst defaultProps = {\n  allowClear: false,\n  children: undefined,\n  defaultValue: undefined,\n  disabled: false,\n  dropdownAttrs: undefined,\n  isInvalid: false,\n  isTouchAccessible: false,\n  maxSelectionCount: undefined,\n  noResultContent: undefined,\n  onChange: undefined,\n  onDeselect: undefined,\n  onSearch: undefined,\n  onSelect: undefined,\n  optionFilter: undefined,\n  placeholder: undefined,\n  required: false,\n  value: undefined,\n  variant: 'default',\n};\n\nfunction Select(props) {\n  const { variant, ...otherProps } = props;\n\n  switch (variant) {\n    case Variants.COMBOBOX: {\n      const { maxSelectionCount, ...comboboxProps } = otherProps;\n      return <Combobox {...comboboxProps} />;\n    }\n    case Variants.MULTIPLE: {\n      const { allowClear, ...multipleProps } = otherProps;\n      return <MultiSelect {...multipleProps} />;\n    }\n    case Variants.SEARCH: {\n      const { maxSelectionCount, ...searchProps } = otherProps;\n      return <Search {...searchProps} />;\n    }\n    case Variants.TAG: {\n      const { noResultContent, allowClear, ...tagProps } = otherProps;\n      return <Tag {...tagProps} />;\n    }\n    case Variants.DEFAULT:\n    default: {\n      const {\n        isTouchAccessible,\n        maxSelectionCount,\n        onSearch,\n        optionFilter,\n        ...singleSelectProps\n      } = otherProps;\n      return <SingleSelect {...singleSelectProps} />;\n    }\n  }\n}\n\nSelect.Option = Option;\nSelect.OptGroup = OptGroup;\nSelect.propTypes = propTypes;\nSelect.defaultProps = defaultProps;\nSelect.isSelect = true;\n\nexport default Select;\n"},2129:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",allowClear:!0,variant:"combobox",className:i("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2130:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst AllowClearExample = () => (\n  <Select placeholder="Select a color" allowClear variant="combobox" className={cx(\'form-select\')}>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default AllowClearExample;\n'},2131:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=function(e){if(e&&e.__esModule)return e;var t=i();if(t&&t.has(e))return t.get(e);var l={};if(null!=e){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var o=n?Object.getOwnPropertyDescriptor(e,a):null;o&&(o.get||o.set)?Object.defineProperty(l,a,o):l[a]=e[a]}}l.default=e,t&&t.set(e,l);return l}(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}function i(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return i=function(){return e},e}function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var l=[],n=!0,a=!1,o=void 0;try{for(var d,r=e[Symbol.iterator]();!(n=(d=r.next()).done)&&(l.push(d.value),!t||l.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==r.return||r.return()}finally{if(a)throw o}}return l}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var u=o.default.bind(d.default),c=function(){var e=s((0,n.useState)("blue"),2),t=e[0],l=e[1];return n.default.createElement(a.default,{placeholder:"Select a color",value:t,onChange:l,className:u("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=c},2132:function(e,t,l){"use strict";l.r(t),t.default='import React, { useState } from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst ControlledExample = () => {\n  const [value, setValue] = useState(\'blue\');\n\n  return (\n    <Select placeholder="Select a color" value={value} onChange={setValue} className={cx(\'form-select\')}>\n      <Select.Option value="blue" display="Blue" />\n      <Select.Option value="green" display="Green" />\n      <Select.Option value="purple" display="Purple" />\n      <Select.Option value="red" display="Red" />\n      <Select.Option value="violet" display="Violet" />\n    </Select>\n  );\n};\n\nexport default ControlledExample;\n'},2133:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",variant:"combobox",className:i("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2134:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst ComboboxExample = () => (\n  <Select placeholder="Select a color" variant="combobox" className={cx(\'form-select\')}>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default ComboboxExample;\n'},2135:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",className:i("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2136:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst DefaultExample = () => (\n  <Select placeholder="Select a color" className={cx(\'form-select\')}>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default DefaultExample;\n'},2137:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",disabled:!0,className:i("form-select"),defaultValue:"blue"},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2138:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst DisabledExample = () => (\n  <Select placeholder="Select a color" disabled className={cx(\'form-select\')} defaultValue="blue">\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default DisabledExample;\n'},2139:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",className:i("form-select"),variant:"search",isTouchAccessible:!0},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2140:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst IsTouchAccessibleExample = () => (\n  <Select placeholder="Select a color" className={cx(\'form-select\')} variant="search" isTouchAccessible>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default IsTouchAccessibleExample;\n'},2141:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",isInvalid:!0,className:i("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2142:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst InvalidExample = () => (\n  <Select placeholder="Select a color" isInvalid className={cx(\'form-select\')}>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default InvalidExample;\n'},2143:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",maxHeight:150,className:i("form-select")},n.default.createElement(a.default.Option,{value:"black",display:"Black"}),n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"brown",display:"Brown"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}),n.default.createElement(a.default.Option,{value:"white",display:"White"}),n.default.createElement(a.default.Option,{value:"yellow",display:"Yellow"}))};t.default=s},2144:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst MaxHeightExample = () => (\n  <Select placeholder="Select a color" maxHeight={150} className={cx(\'form-select\')}>\n    <Select.Option value="black" display="Black" />\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="brown" display="Brown" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n    <Select.Option value="white" display="White" />\n    <Select.Option value="yellow" display="Yellow" />\n  </Select>\n);\n\nexport default MaxHeightExample;\n'},2145:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",variant:"multiple",className:i("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2146:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst MultipleExample = () => (\n  <Select placeholder="Select a color" variant="multiple" className={cx(\'form-select\')}>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default MultipleExample;\n'},2147:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",className:i("form-select")},n.default.createElement(a.default.OptGroup,{label:"Shade of blue"},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"cyan",display:"Cyan"}),n.default.createElement(a.default.Option,{value:"teal",display:"Teal"}),n.default.createElement(a.default.Option,{value:"azul",display:"Azul"}),n.default.createElement(a.default.Option,{value:"aqua",display:"Aqua"})),n.default.createElement(a.default.OptGroup,{label:"Shades of green"},n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"forest",display:"Forest Green"}),n.default.createElement(a.default.Option,{value:"dark",display:"Dark Green"}),n.default.createElement(a.default.Option,{value:"neon",display:"Neon Green"})))};t.default=s},2148:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst OptGroupExample = () => (\n  <Select placeholder="Select a color" className={cx(\'form-select\')}>\n    <Select.OptGroup label="Shade of blue">\n      <Select.Option value="blue" display="Blue" />\n      <Select.Option value="cyan" display="Cyan" />\n      <Select.Option value="teal" display="Teal" />\n      <Select.Option value="azul" display="Azul" />\n      <Select.Option value="aqua" display="Aqua" />\n    </Select.OptGroup>\n    <Select.OptGroup label="Shades of green">\n      <Select.Option value="green" display="Green" />\n      <Select.Option value="forest" display="Forest Green" />\n      <Select.Option value="dark" display="Dark Green" />\n      <Select.Option value="neon" display="Neon Green" />\n    </Select.OptGroup>\n  </Select>\n);\n\nexport default OptGroupExample;\n'},2149:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",variant:"search",className:i("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2150:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst SearchExample = () => (\n  <Select placeholder="Select a color" variant="search" className={cx(\'form-select\')}>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default SearchExample;\n'},2151:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(259)),o=r(l(4)),d=r(l(806));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{placeholder:"Select a color",variant:"tag",className:i("form-select")},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"purple",display:"Purple"}),n.default.createElement(a.default.Option,{value:"red",display:"Red"}),n.default.createElement(a.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2152:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport Select from \'terra-form-select\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst TagExample = () => (\n  <Select placeholder="Select a color" variant="tag" className={cx(\'form-select\')}>\n    <Select.Option value="blue" display="Blue" />\n    <Select.Option value="green" display="Green" />\n    <Select.Option value="purple" display="Purple" />\n    <Select.Option value="red" display="Red" />\n    <Select.Option value="violet" display="Violet" />\n  </Select>\n);\n\nexport default TagExample;\n'},2930:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=D(l(0)),a=D(l(796)),o=D(l(947)),d=l(835),r=D(l(2127)),i=D(l(2128)),s=D(l(948)),u=D(l(949)),c=D(l(950)),p=D(l(951)),m=D(l(2129)),f=D(l(2130)),y=D(l(2131)),b=D(l(2132)),v=D(l(2133)),g=D(l(2134)),h=D(l(2135)),S=D(l(2136)),O=D(l(2137)),w=D(l(2138)),E=D(l(2139)),x=D(l(2140)),P=D(l(2141)),C=D(l(2142)),T=D(l(2143)),N=D(l(2144)),_=D(l(2145)),G=D(l(2146)),V=D(l(2147)),M=D(l(2148)),A=D(l(2149)),R=D(l(2150)),k=D(l(2151)),B=D(l(2152));function D(e){return e&&e.__esModule?e:{default:e}}var j=function(){return n.default.createElement(a.default,{packageName:d.name,packageVersion:d.version,readme:o.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/terra-form-select",propsTables:[{componentName:"Select",componentSrc:i.default,componentProps:r.default},{componentName:"Option",componentSrc:u.default,componentProps:s.default},{componentName:"OptGroup",componentSrc:p.default,componentProps:c.default}],examples:[{title:"Default",description:"A default variant allows selecting a single option.",example:n.default.createElement(h.default,null),source:S.default},{title:"Search",description:"A search variant provides a searchable single select.",example:n.default.createElement(A.default,null),source:R.default},{title:"Combobox",description:"A combobox variant allows a user to enter a single free text entry or select a single option from the the dropdown.",example:n.default.createElement(v.default,null),source:g.default},{title:"Multiple",description:"A multiple variant allows searching and selecting multiple options.",example:n.default.createElement(_.default,null),source:G.default},{title:"Tag",description:"A tag variant allows a user to enter multiple custom free text entries or select multiple options from the the dropdown.",example:n.default.createElement(k.default,null),source:B.default},{title:"Disabled (applies to all)",example:n.default.createElement(O.default,null),source:w.default},{title:"Is Touch Accessible (applies to only 'combobox', 'multiple', 'tag', and 'search')",description:"Ensure accessibility on touch devices. Will render the dropdown menu in normal DOM flow with position absolute. By default, the menu renders in a portal, which is inaccessible on touch devices.",example:n.default.createElement(E.default,null),source:x.default},{title:"Invalid (applies to all)",description:"Applies theme-specific styling for invalid. Will also display error text when used with a Field.",example:n.default.createElement(P.default,null),source:C.default},{title:"Ability to add Option Groups (applies to all)",description:"An OptGroup provides a way to group options together within the listbox. Can be applied to all select variants (default, search, combobox, multiple, tag).",example:n.default.createElement(V.default,null),source:M.default},{title:"Ability to set a Maximum Height (applies to all)",description:"An example of implementing a custom max height of the dropdown.",example:n.default.createElement(T.default,null),source:N.default},{title:"Ability to Clear Selection (applies to only 'default', 'combobox', and 'search')",description:"An example with an option to clear the selected item. (Not applicable to 'multiple' or 'tag' variants)",example:n.default.createElement(m.default,null),source:f.default},{title:"Create a Controlled Select (applies to all)",description:"An example of implementing a controlled Select.",example:n.default.createElement(y.default,null),source:b.default}]})};t.default=j}}]);
//# sourceMappingURL=88-6d8b5d02c81f900a7391.js.map